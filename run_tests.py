from pathlib import Path
import subprocess


def run_and_organize_outputs(yaml_dir: str, script_name: str = "aufgabe1.py") -> None:
    """
    Runs aufgabe1.py for each YAML file in the specified directory, creates a folder named
    after each YAML file within the same directory, and moves the output files
    (aufgabe1-1.yaml, aufgabe1-2.yaml, aufgabe1-3.yaml) into their respective folders.

    Args:
        yaml_dir (str): Directory containing YAML files to process.
        script_name (str): Name of the Python script to run (default is "aufgabe1.py").
    """
    # Path to the tests directory
    tests_path = Path(yaml_dir)
    # Define output files generated by aufgabe1.py
    output_files = ["aufgabe1-1.yaml", "aufgabe1-2.yaml", "aufgabe1-3.yaml"]

    # Process each YAML file in the specified directory
    for yaml_file in tests_path.glob("*.yaml"):
        base_name = yaml_file.stem  # Get file name without extension
        folder_path = tests_path / base_name  # Create output folder path within the tests directory

        # Create a folder named after the base name of the YAML file inside tests
        folder_path.mkdir(exist_ok=True)

        # Run the aufgabe1.py script with the current YAML file
        try:
            subprocess.run(["python", script_name, str(yaml_file)], check=True)
        except subprocess.CalledProcessError as e:
            print(f"Error running {script_name} for {yaml_file}: {e}")
            continue  # Skip to the next YAML file in case of an error

        # Move the output files into the created folder
        for output_file in output_files:
            output_path = Path(output_file)
            destination_path = folder_path / output_file
            if output_path.exists():
                # Remove existing file in the destination if it exists
                if destination_path.exists():
                    destination_path.unlink()
                output_path.rename(folder_path / output_file)
            else:
                print(f"Warning: Expected output file {output_file} not found for {yaml_file}")

    print("Processing completed for all YAML files in the tests folder.")


# Example usage, assuming test files are in a folder named 'tests'
run_and_organize_outputs("tests")
